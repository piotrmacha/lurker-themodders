/*
 * This file is generated by jOOQ.
 */
package pl.piotrmacha.lurker.jooq.tables.records;


import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;

import pl.piotrmacha.lurker.jooq.tables.PostAttachment;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PostAttachmentRecord extends UpdatableRecordImpl<PostAttachmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.post_attachment.post_id</code>.
     */
    public void setPostId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.post_attachment.post_id</code>.
     */
    public Long getPostId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.post_attachment.asset_id</code>.
     */
    public void setAssetId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.post_attachment.asset_id</code>.
     */
    public Long getAssetId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostAttachmentRecord
     */
    public PostAttachmentRecord() {
        super(PostAttachment.POST_ATTACHMENT);
    }

    /**
     * Create a detached, initialised PostAttachmentRecord
     */
    public PostAttachmentRecord(Long postId, Long assetId) {
        super(PostAttachment.POST_ATTACHMENT);

        setPostId(postId);
        setAssetId(assetId);
        resetChangedOnNotNull();
    }
}
