/*
 * This file is generated by jOOQ.
 */
package pl.piotrmacha.lurker.jooq.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import pl.piotrmacha.lurker.jooq.tables.Asset;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AssetRecord extends UpdatableRecordImpl<AssetRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.asset.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.asset.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.asset.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.asset.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.asset.url</code>.
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.asset.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.asset.data</code>.
     */
    public void setData(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.asset.data</code>.
     */
    public byte[] getData() {
        return (byte[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssetRecord
     */
    public AssetRecord() {
        super(Asset.ASSET);
    }

    /**
     * Create a detached, initialised AssetRecord
     */
    public AssetRecord(Long id, String name, String url, byte[] data) {
        super(Asset.ASSET);

        setId(id);
        setName(name);
        setUrl(url);
        setData(data);
        resetChangedOnNotNull();
    }
}
