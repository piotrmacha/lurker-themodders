/*
 * This file is generated by jOOQ.
 */
package pl.piotrmacha.lurker.jooq.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import pl.piotrmacha.lurker.jooq.tables.PostFulltext;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PostFulltextRecord extends UpdatableRecordImpl<PostFulltextRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.post_fulltext.post_id</code>.
     */
    public void setPostId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.post_fulltext.post_id</code>.
     */
    public Long getPostId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.post_fulltext.topic_id</code>.
     */
    public void setTopicId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.post_fulltext.topic_id</code>.
     */
    public Long getTopicId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.post_fulltext.author_id</code>.
     */
    public void setAuthorId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.post_fulltext.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.post_fulltext.content</code>.
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.post_fulltext.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.post_fulltext.topic</code>.
     */
    public void setTopic(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.post_fulltext.topic</code>.
     */
    public String getTopic() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.post_fulltext.author</code>.
     */
    public void setAuthor(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.post_fulltext.author</code>.
     */
    public String getAuthor() {
        return (String) get(5);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setSearchVectorEnglish(Object value) {
        set(6, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getSearchVectorEnglish() {
        return get(6);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setSearchVectorPolish(Object value) {
        set(7, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getSearchVectorPolish() {
        return get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostFulltextRecord
     */
    public PostFulltextRecord() {
        super(PostFulltext.POST_FULLTEXT);
    }

    /**
     * Create a detached, initialised PostFulltextRecord
     */
    public PostFulltextRecord(Long postId, Long topicId, Long authorId, String content, String topic, String author, Object searchVectorEnglish, Object searchVectorPolish) {
        super(PostFulltext.POST_FULLTEXT);

        setPostId(postId);
        setTopicId(topicId);
        setAuthorId(authorId);
        setContent(content);
        setTopic(topic);
        setAuthor(author);
        setSearchVectorEnglish(searchVectorEnglish);
        setSearchVectorPolish(searchVectorPolish);
        resetChangedOnNotNull();
    }
}
