/*
 * This file is generated by jOOQ.
 */
package pl.piotrmacha.lurker.jooq;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import pl.piotrmacha.lurker.jooq.tables.Account;
import pl.piotrmacha.lurker.jooq.tables.Asset;
import pl.piotrmacha.lurker.jooq.tables.Category;
import pl.piotrmacha.lurker.jooq.tables.FlywaySchemaHistory;
import pl.piotrmacha.lurker.jooq.tables.Post;
import pl.piotrmacha.lurker.jooq.tables.Thread;
import pl.piotrmacha.lurker.jooq.tables.VisitedUrl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.account</code>.
     */
    public final Account ACCOUNT = Account.ACCOUNT;

    /**
     * The table <code>public.asset</code>.
     */
    public final Asset ASSET = Asset.ASSET;

    /**
     * The table <code>public.category</code>.
     */
    public final Category CATEGORY = Category.CATEGORY;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.post</code>.
     */
    public final Post POST = Post.POST;

    /**
     * The table <code>public.thread</code>.
     */
    public final Thread THREAD = Thread.THREAD;

    /**
     * The table <code>public.visited_url</code>.
     */
    public final VisitedUrl VISITED_URL = VisitedUrl.VISITED_URL;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.ASSET_ID_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Account.ACCOUNT,
            Asset.ASSET,
            Category.CATEGORY,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Post.POST,
            Thread.THREAD,
            VisitedUrl.VISITED_URL
        );
    }
}
